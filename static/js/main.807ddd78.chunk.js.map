{"version":3,"sources":["Camera.js","AppCamera.js","AppButton.js","AppImage.js","App.js","index.js"],"names":["Camera","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","takePhoto","onTakePhoto","cameraPhoto","getDataUri","sizeFactor","videoRef","React","createRef","CameraPhoto","current","startCamera","idealFacingMode","FACING_MODES","ENVIRONMENT","width","height","_this$props","videoWidth","videoHeight","react_default","a","createElement","react","ref","playsInline","autoPlay","className","onClick","Component","AppCamera","_ref","onCameraStart","id","src_Camera","isImageMirror","AppButton","title","AppImage","src","alt","App","state","passportAspectRatio","croppedPhoto","croppedBarCode","timestamp","photoRectW","photoRectH","photoRectX","photoRectY","barCodeRectW","barCodeRectH","barCodeRectX","barCodeRectY","sendToS3","data","name","axios","post","process","photo","then","r","catch","e","console","error","createPartialFrameOverlay","selector","videoW","videoH","rectW","rectH","x","y","canvasOverlay","document","getElementById","ctx","getContext","lineWidth","strokeStyle","strokeRect","getViewPortInfo","viewPortWidth","Math","max","documentElement","clientWidth","window","innerWidth","viewPortHeight","clientHeight","innerHeight","viewPortAspectRatio","isLandscapeMode","getOptimalVideoDimensions","_this$getViewPortInfo","floor","initCamera","_this$getOptimalVideo","setState","cropImage","img","newWidth","newHeight","startX","startY","tnCanvas","tnCanvasContext","bufferCanvas","bufferContext","drawImage","toDataURL","setTimeout","getRenderedSize","cWidth","cHeight","pos","oRatio","cRatio","left","right","getImgSizeInfo","naturalWidth","naturalHeight","dataUri","_this$state","Image","style","objectFit","onload","_this$getImgSizeInfo","target","abs","Date","now","concat","openInNewTab","open","write","querySelector","addEventListener","_this$state2","canShowCamera","src_AppCamera","Fragment","marginRight","src_AppImage","src_AppButton","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.807ddd78.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport CameraPhoto, { FACING_MODES } from 'jslib-html5-camera-photo';\n\nclass Camera extends React.Component {\n  constructor (props, context) {\n    super(props, context);\n    this.cameraPhoto = null;\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount () {\n    this.cameraPhoto = new CameraPhoto(this.videoRef.current);\n    this.startCamera();\n  }\n\n  startCamera () {\n    const idealFacingMode = FACING_MODES.ENVIRONMENT;\n    const idealResolution = { width: 1920, height: 1080 };\n    this.cameraPhoto.startCamera(idealFacingMode, idealResolution);\n  }\n\n  takePhoto = () => {\n    const { onTakePhoto } = this.props;\n    const config = { sizeFactor: 1 };\n    onTakePhoto(this.cameraPhoto.getDataUri(config));\n  };\n\n  render () {\n    const { videoWidth, videoHeight } = this.props;\n    return (\n      <Fragment>\n        <video\n          ref={this.videoRef}\n          width={videoWidth}\n          height={videoHeight}\n          playsInline\n          autoPlay={true}\n        />\n        <span className=\"take-photo\" onClick={this.takePhoto} />\n      </Fragment>\n    );\n  }\n}\n\nexport default Camera;\n","import React from \"react\";\nimport Camera from \"./Camera.js\";\n\nconst AppCamera = ({ onTakePhoto, onCameraStart, videoHeight, videoWidth}) => (\n  <div>\n    <canvas\n      className=\"canvas-partial-frame-overlay\"\n      id=\"canvas-photo-frame-overlay\"\n    />\n    <canvas\n      className=\"canvas-partial-frame-overlay\"\n      id=\"canvas-bar-code-frame-overlay\"\n    />\n    <Camera\n      videoHeight={videoHeight}\n      videoWidth={videoWidth}\n      onTakePhoto={onTakePhoto}\n      onCameraStart={onCameraStart}\n      isImageMirror={false}\n    />\n  </div>\n);\n\nexport default AppCamera;\n","import React from \"react\";\n\nconst AppButton = ({ title, onClick }) => (\n  <button onClick={onClick}>{title}</button>\n);\n\nexport default AppButton;\n","import React from \"react\";\n\nconst AppImage = ({ src }) => <img src={src} width=\"250px\" alt=\"\" />;\n\nexport default AppImage;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport AppCamera from \"./AppCamera\";\nimport AppButton from \"./AppButton\";\nimport AppImage from \"./AppImage\";\n\nclass App extends Component {\n  state = {\n    passportAspectRatio: 1.414634146,\n    croppedPhoto: \"\",\n    croppedBarCode: \"\",\n    timestamp: \"\",\n    photoRectW: 0,\n    photoRectH: 0,\n    photoRectX: 0,\n    photoRectY: 0,\n    barCodeRectW: 0,\n    barCodeRectH: 0,\n    barCodeRectX: 0,\n    barCodeRectY: 0\n  };\n\n  componentDidMount() {\n    this.videoRef = document.querySelector(\"video\");\n    window.addEventListener(\"resize\", this.initCamera);\n  }\n\n  sendToS3 = (data, name) => {\n    axios\n      .post(process.env.REACT_APP_BE_PATH_TO_UPLOAD, {\n        photo: data,\n        name\n      })\n      .then(r => r)\n      .catch(e => console.error(\"UPLOAD ERROR => \", e));\n  };\n\n  createPartialFrameOverlay = ({\n    selector,\n    videoW,\n    videoH,\n    rectW,\n    rectH,\n    x,\n    y\n  }) => {\n    const canvasOverlay = document.getElementById(selector);\n    canvasOverlay.width = videoW;\n    canvasOverlay.height = videoH;\n    const ctx = canvasOverlay.getContext(\"2d\");\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#fff\";\n    ctx.strokeRect(x, y, rectW, rectH);\n  };\n\n  getViewPortInfo = () => {\n    const viewPortWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    const viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    const viewPortAspectRatio = viewPortWidth / viewPortHeight || 0;\n\n    const isLandscapeMode = viewPortWidth > viewPortHeight;\n\n    return {\n      viewPortWidth,\n      viewPortHeight,\n      viewPortAspectRatio,\n      isLandscapeMode,\n    }\n  };\n\n  getOptimalVideoDimensions = () => {\n    const {viewPortHeight, viewPortWidth, viewPortAspectRatio} = this.getViewPortInfo();\n    const {passportAspectRatio} = this.state;\n\n    if (viewPortAspectRatio > passportAspectRatio) {\n      return {\n        height: viewPortHeight,\n        width: Math.floor(viewPortHeight * passportAspectRatio),\n      };\n    } else {\n      return {\n        width: viewPortWidth,\n        height: Math.floor(viewPortWidth / passportAspectRatio),\n      };\n    }\n  };\n\n  initCamera = () => {\n    if (!this.videoRef) return;\n\n    if (this.state.croppedPhoto || this.state.croppedBarCode) return;\n\n    const {height: videoH, width: videoW} = this.getOptimalVideoDimensions();\n\n    let photoRectH;\n    let photoRectW;\n    let photoRectX;\n    let photoRectY;\n    let barCodeRectH;\n    let barCodeRectW;\n    let barCodeRectX;\n    let barCodeRectY;\n\n    // if (isLandscapeMode) {\n    barCodeRectH = videoH * 0.16;\n    barCodeRectW = videoW * 0.94;\n\n    barCodeRectX = (videoW - barCodeRectW) / 2;\n    barCodeRectY = videoH * 0.78;\n\n    photoRectH = videoH * 0.49;\n    photoRectW = videoW * 0.27;\n\n    photoRectX = barCodeRectX;\n    photoRectY = videoH * 0.25;\n    // } else {\n    //   photoRectH = videoH * 0.2;\n    //   photoRectW = videoW * 0.34;\n    //   photoRectX = videoW * 0.35;\n    //   photoRectY = videoH * 0.065;\n    //\n    //   barCodeRectH = videoH * 0.94;\n    //   barCodeRectW = videoW * 0.16;\n    //   barCodeRectX = videoW * 0.055;\n    //   barCodeRectY = (videoH - barCodeRectH) / 2;\n    // }\n\n    this.createPartialFrameOverlay({\n      selector: \"canvas-photo-frame-overlay\",\n      videoW,\n      videoH,\n      rectW: photoRectW,\n      rectH: photoRectH,\n      x: photoRectX,\n      y: photoRectY\n    });\n\n    this.createPartialFrameOverlay({\n      selector: \"canvas-bar-code-frame-overlay\",\n      videoW,\n      videoH,\n      rectW: barCodeRectW,\n      rectH: barCodeRectH,\n      x: barCodeRectX,\n      y: barCodeRectY\n    });\n\n    this.setState({\n      photoRectW,\n      photoRectH,\n      photoRectX,\n      photoRectY,\n      barCodeRectW,\n      barCodeRectH,\n      barCodeRectX,\n      barCodeRectY,\n      videoW,\n      videoH,\n    });\n  };\n\n  cropImage = (img, newWidth, newHeight, startX, startY, height, width) => {\n    const tnCanvas = document.createElement(\"canvas\");\n    const tnCanvasContext = tnCanvas.getContext(\"2d\");\n    tnCanvas.width = newWidth;\n    tnCanvas.height = newHeight;\n\n    const bufferCanvas = document.createElement(\"canvas\");\n    const bufferContext = bufferCanvas.getContext(\"2d\");\n\n    bufferCanvas.width = width;\n    bufferCanvas.height = height;\n    bufferContext.drawImage(img, 0, 0, width, height);\n\n    tnCanvasContext.drawImage(\n      bufferCanvas,\n      startX,\n      startY,\n      newWidth,\n      newHeight,\n      0,\n      0,\n      newWidth,\n      newHeight\n    );\n\n    return tnCanvas.toDataURL();\n  };\n\n  onCameraStart = setTimeout(this.initCamera, 2000);\n\n  getRenderedSize = (cWidth, cHeight, width, height, pos) => {\n    var oRatio = width / height,\n      cRatio = cWidth / cHeight;\n    return function() {\n      if (oRatio < cRatio) {\n        this.width = cWidth;\n        this.height = cWidth / oRatio;\n      } else {\n        this.width = cHeight * oRatio;\n        this.height = cHeight;\n      }\n      this.left = (cWidth - this.width)*(pos/100);\n      this.right = this.width + this.left;\n      return this;\n    }.call({});\n  };\n\n  getImgSizeInfo = (img) => {\n    return this.getRenderedSize(\n      img.width,\n      img.height,\n      img.naturalWidth,\n      img.naturalHeight,\n      50,\n    )\n  };\n\n  onTakePhoto = dataUri => {\n    const {\n      photoRectW,\n      photoRectH,\n      photoRectX,\n      photoRectY,\n      barCodeRectW,\n      barCodeRectH,\n      barCodeRectX,\n      barCodeRectY,\n      videoH,\n      videoW,\n    } = this.state;\n\n    const img = new Image();\n    img.style.objectFit = 'cover';\n    img.src = dataUri;\n    img.width = videoW;\n    img.height = videoH;\n    img.onload = (e) => {\n      const {height, width, left } = this.getImgSizeInfo(e.target);\n\n      const croppedPhoto = this.cropImage(\n        e.target,\n        photoRectW,\n        photoRectH,\n        photoRectX + Math.abs(left),\n        photoRectY,\n        height,\n        width\n      );\n      const croppedBarCode = this.cropImage(\n        e.target,\n        barCodeRectW,\n        barCodeRectH,\n        barCodeRectX + Math.abs(left),\n        barCodeRectY,\n        height,\n        width\n      );\n\n      const timestamp = Date.now();\n\n      this.setState({croppedPhoto, croppedBarCode, timestamp});\n      this.sendToS3(croppedPhoto, `passport_photo_${timestamp}`);\n      this.sendToS3(croppedBarCode, `passport_bar_code_${timestamp}`);\n    };\n  };\n\n  openInNewTab = data => () => {\n    const newWindow = window.open();\n    newWindow.document.write(`<img src=\"${data}\">`);\n  };\n\n  render() {\n    const {croppedPhoto, croppedBarCode, timestamp, videoW, videoH, dataUri} = this.state;\n    const canShowCamera = !croppedPhoto && !croppedBarCode;\n\n    if (dataUri) {\n      return (\n        <div className=\"app\">\n          <img src={dataUri} width={videoW} alt=\"\"/>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"app\">\n        {canShowCamera && (\n          <AppCamera\n            onTakePhoto={this.onTakePhoto}\n            onCameraStart={this.onCameraStart}\n            videoHeight={videoH}\n            videoWidth={videoW}\n          />\n        )}\n        {croppedPhoto && (\n          <React.Fragment>\n            <div className=\"images-wrapper\">\n              <div\n                className=\"images-wrapper__item\"\n                style={{ marginRight: \"15px\" }}\n              >\n                <AppImage src={croppedPhoto} />\n                <AppButton\n                  title={`passport_photo_${timestamp}`}\n                  onClick={this.openInNewTab(croppedPhoto)}\n                />\n                <AppImage src={croppedBarCode} />\n                <AppButton\n                  title={`passport_bar_code_${timestamp}`}\n                  onClick={this.openInNewTab(croppedBarCode)}\n                />\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}